'use strict';
/**
 * Use __non_webpack_require__ when require('a-package') that is underlying &
 * pre-installed in your runtime such as 'aws-sdk' or in node_modules layers
 **/
const enforcementPackage = process.env.ENFORCEMENT_PACKAGE || '{{FunctionNameSnake}}'
const allowedCanaries = [ "latest", "stable", "enforce" ]
const getPackage = function(canary) {
    let runtimePackage = undefined
    if (canary === 'stable') runtimePackage = __non_webpack_require__('{{FunctionNameSnake}}')
    else if (canary === 'enforce') runtimePackage = __non_webpack_require__(`${enforcementPackage}`)
    else runtimePackage = require('./{{FunctionNameSnake}}')
    return runtimePackage
}
var {{FunctionName}} = getPackage(process.env.DEPLOYMENT_STAGE || 'latest')

exports.handler = (event, context, callback) => {
    if (allowedCanaries.indexOf((event.args || {})['x-canary-selection']) >=0 && process.env.DEPLOYMENT_STAGE === 'canary') {
        functionForGetTimetables = getPackage(`${(event.args || {})['x-canary-selection']}`)
    }
    {{FunctionName}}.handler(event.args, event.context, callback)
};