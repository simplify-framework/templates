'use strict';
/** 
 * Simplify Framework - GraphQL {{GeneratorVersion}}
 * GitHub URL   : https://github.com/simplify-framework
 * ProjectName  : {{ProjectNamePascal}}
 * ProjectId    : {{ProjectId}}
 * License      : Apache-2.0 (Free)
 */
const fs = require('fs')
const path = require('path')
const { ApolloServer, gql } = require('apollo-server');
const schema = fs.readFileSync(path.resolve(__dirname, 'graphql.schema'), 'utf8')
const typeDefs = gql(schema);

{{#Definitions}}
{{#Paths}}
{{#Operations}}
{{#Function}}const { {{Name}} } = require('./States/{{Name}}'){{/Function}}
{{/Operations}}
{{/Paths}}
{{/Definitions}}

const resolvers = {
    {{#Definitions}}
    {{{Definition}}}: {
    {{#Paths}}
    // POST {{Path}} {{#Options}}using {{AuthMode}} authorization with ApiKey={{ApiKey}}{{/Options}}
    {{#Operations}}
        {{OperationId}}: (parent, args, context, info) => {{#Function}}{{Name}}(parent, args, context, info){{/Function}}{{#hasMore}},{{/hasMore}}
    {{/Operations}}
    {{#hasMore}},{{/hasMore}}{{^hasMore}}// END{{/hasMore}}
    {{/Paths}}
    }{{#hasMore}},{{/hasMore}}
    {{/Definitions}}
}

const server = new ApolloServer({
    typeDefs, resolvers, context: ({ req }) => ({
        requestContext: req.headers.requestContext
    })
})

if (process.env.LOCAL_DEBUG === "YES") {
    server.listen().then(({ url }) => {
        console.log(`GraphQL server is ready at ${url}`)
    })
}

module.exports = server