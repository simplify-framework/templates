import chai, { expect } from 'chai'
import fetch from 'node-fetch'
chai.should()

describe('({{ProjectName}}) {{Name}} [*]:', function () {
    before('Prepare for {{Name}} [*] test specs', async function () {
    });
    it('Should be resolved with {{{OperationId}}} ({{Definition}}) when calling {{Name}} at http://localhost:4000/graphql', async function () {
        const response = await fetch('http://localhost:4000/graphql', {
            "headers": {
                "content-type": "application/json"
            },
            "body": JSON.stringify({
                "operationName": "{{NamePascal}}",
                "variables": {},
                "query": "{{DefinitionSnake}} {{NamePascal}} { {{{OperationId}}} { {{#DataValues}}{{Name}} {{#Value}}{{#isNestedObject}}{ {{#Default}}{{Name}}{{#hasMore}} {{/hasMore}}{{/Default}} }{{/isNestedObject}}{{/Value}}{{#hasMore}} {{/hasMore}}{{/DataValues}} } }"}
            ),
            "method": "POST",
            "mode": "cors"
        })
        const result = await response.json()
        result.should.be.an('object') && expect(result).to.have.property('data')
        expect(result.data).to.have.property('{{{OperationId}}}')
    });
    after('Cleanup {{Name}} [*] test specs', function () {});
});
