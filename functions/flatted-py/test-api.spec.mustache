import chai, { expect } from 'chai'
chai.should()

const apiConfig = require('../../../../{{deploymentNameSnake}}-meta.json').apiConfig;
const apiService = require('../../../utils/api-utils');

describe('({{projectName}}) {{serviceName}} [*]:', function () {

    before('Prepare for {{serviceName}} [*] test specs', async function () {
        await apiService.config({ ...apiConfig });
    });
    {{#serviceEntries}}
    {{#servicePublicBoolean}}
    {{#operations}}
    it('Should be resolved with Response (Object) when calling {{httpMethod}} {{path}}', async function () {
        var data = { {{#allParams}}{{paramName}}: {{#isBoolean}}true{{/isBoolean}}{{^isBoolean}}{{#isInteger}}10{{/isInteger}}{{^isInteger}}{{#isNumber}}1.0{{/isNumber}}{{^isNumber}}{{#isArray}}[]{{/isArray}}{{^isArray}}{{#isBodyParam}}{}{{/isBodyParam}}{{^isBodyParam}}'{{paramName}}'{{/isBodyParam}}{{/isArray}}{{/isNumber}}{{/isInteger}}{{/isBoolean}}{{#hasMore}}, {{/hasMore}}{{/allParams}} }
        let pathWithParams = '{{path}}'.split('/')
        Object.keys(data).map(key => {
            const keyIndex = pathWithParams.indexOf('{' + key + '}')
            if (keyIndex >= 0) {
                pathWithParams[keyIndex] = data[key]
            }
        })
        {{#serviceApiKeyBoolean}}
        const apiKey = await apiService.getApiKey()
        const result = await apiService.executeIAM(pathWithParams.join('/'), '{{httpMethod}}'{{#httpMethodHasBody}}, data.body{{/httpMethodHasBody}}{{^httpMethodHasBody}}, data{{/httpMethodHasBody}}, apiKey)
        {{/serviceApiKeyBoolean}}
        {{^serviceApiKeyBoolean}}
        const result = await apiService.executeIAM(pathWithParams.join('/'), '{{httpMethod}}'{{#httpMethodHasBody}}, data.body{{/httpMethodHasBody}}{{^httpMethodHasBody}}, data{{/httpMethodHasBody}})
        {{/serviceApiKeyBoolean}}
        result.should.be.an('object') && expect(result).to.have.property('errors')
        expect(JSON.parse(result.errors.message).code).to.be.equal('ErrorServiceNotImplemetedException')
    });
    {{/operations}}
    {{/servicePublicBoolean}}
    {{/serviceEntries}}
    after('Cleanup {{serviceName}} [*] test specs', function () {});
});
